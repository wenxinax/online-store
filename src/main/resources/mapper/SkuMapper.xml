<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.onlinestore.mapper.SkuMapper">
    <resultMap id="skuResultMap" type="com.example.onlinestore.entity.SkuEntity">
        <id property="id" column="id"/>
        <result property="itemId" column="item_id"/>
        <result property="skuCode" column="sku_code"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="price" column="price"/>
        <result property="defaultSku" column="default_sku"/>
        <result property="stockQuantity" column="stock_quantity"/>
        <result property="soldQuantity" column="sold_quantity"/>
        <result property="warningQuantity" column="warning_quantity"/>
        <result property="image" column="image"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="Base_Column">
        `id`, `item_id`, `sku_code`, `name`, `description`, `price`, `default_sku`, `stock_quantity`, `sold_quantity`, `warning_quantity`, `image`,`created_at`, `updated_at`
    </sql>

    <insert id="insert" parameterType="com.example.onlinestore.entity.SkuEntity">
        INSERT INTO `sku` (
            `item_id`, `sku_code`, `name`, `description`, `price`, `default_sku`,`stock_quantity`, `sold_quantity`, `warning_quantity`, `image`,`created_at`, `updated_at`
        )
        VALUES (
            #{itemId}, #{skuCode}, #{name}, #{description}, #{price}, #{defaultSku}, #{stockQuantity}, #{soldQuantity}, #{warningQuantity}, #{image}, #{createdAt}, #{updatedAt}
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO `sku` (
            `item_id`, `sku_code`, `name`, `description`, `price`, `default_sku`, `stock_quantity`, `sold_quantity`, `warning_quantity`, `image`,`created_at`, `updated_at`
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{itemId}, #{skuCode}, #{name}, #{description}, #{price}, #{defaultSku}, #{stockQuantity}, #{soldQuantity}, #{warningQuantity}, #{image}, #{createdAt}, #{updatedAt}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.example.onlinestore.entity.SkuEntity">
        UPDATE `sku`
        <set>
            <if test="itemId != null">`item_id` = #{itemId},</if>
            <if test="skuCode != null">`sku_code` = #{skuCode},</if>
            <if test="name != null">`name` = #{name},</if>
            <if test="description != null">`description` = #{description},</if>
            <if test="price != null">`price` = #{price},</if>
            <if test="defaultSku != null">`default_sku` = #{defaultSku},</if>
            <if test="stockQuantity != null">`stock_quantity` = #{stockQuantity},</if>
            <if test="soldQuantity != null">`sold_quantity` = #{soldQuantity},</if>
            <if test="warningQuantity != null">`warning_quantity` = #{warningQuantity},</if>
            <if test="image != null">`image` = #{image},</if>
            <if test="updatedAt != null">`updated_at` = #{updatedAt}</if>
        </set>
        WHERE `id` = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM `sku` WHERE `id` = #{id}
    </delete>

    <select id="findById" resultMap="skuResultMap">
        SELECT
        <include refid="Base_Column"/>
        FROM `sku`
        WHERE `id` = #{id}
    </select>

    <select id="findByItemId" resultMap="skuResultMap">
        SELECT
        <include refid="Base_Column"/>
        FROM `sku`
        WHERE `item_id` = #{itemId}
    </select>

    <select id="findBySkuCode" resultMap="skuResultMap">
        SELECT
        <include refid="Base_Column"/>
        FROM `sku`
        WHERE `sku_code` = #{skuCode}
    </select>

    <update id="updateStock">
        UPDATE `sku`
        SET `stock_quantity` = #{quantity},
            `updated_at` = NOW()
        WHERE `id` = #{id}
    </update>

    <update id="updateSoldQuantity">
        UPDATE `sku`
        SET `sold_quantity` = `sold_quantity` + #{quantity},
            `updated_at` = NOW()
        WHERE `id` = #{id}
    </update>
</mapper> 