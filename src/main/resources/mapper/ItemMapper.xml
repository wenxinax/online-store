<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.onlinestore.mapper.ItemMapper">
    <resultMap id="itemResultMap" type="com.example.onlinestore.entity.ItemEntity">
        <id property="id" column="id"/>
        <result property="brandId" column="brand_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="descriptionURL" column="description_url"/>
        <result property="mainImageURL" column="main_image_url"/>
        <result property="subImageURLs" column="sub_image_urls"/>
        <result property="status" column="status"/>
        <result property="sortScore" column="sort_score"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="Base_Column">
        `id`, `brand_id`, `category_id`, `name`, `description`, `description_url`, `main_image_url`, `sub_image_urls`, `status`, `sort_score`, `created_at`, `updated_at`
    </sql>

    <insert id="insert" parameterType="com.example.onlinestore.entity.ItemEntity">
        INSERT INTO `item` (`brand_id`, `category_id`, `name`, `description`, `description_url`, `main_image_url`, `sub_image_urls`,
                            `status`, `sort_score`, `created_at`, `updated_at`)
        VALUES (#{brandId}, #{categoryId}, #{name}, #{description}, #{descriptionURL}, #{mainImageURL}, #{subImageURLs}, #{status},
                #{sortScore}, #{createdAt}, #{updatedAt})
    </insert>

    <select id="findById" resultMap="itemResultMap">
        SELECT
        <include refid="Base_Column"/>
        FROM `item`
        WHERE `id` = #{id}
    </select>

    <update id="update" parameterType="com.example.onlinestore.entity.ItemEntity">
        UPDATE `item`
        <set>
            <if test="brandId != null">`brand_id` = #{brandId},</if>
            <if test="categoryId != null">`category_id` = #{categoryId},</if>
            <if test="name != null and name != ''">`name` = #{name},</if>
            <if test="description != null and description != ''">`description` = #{description},</if>
            <if test="descriptionURL != null and descriptionURL != ''">`description_url` = #{descriptionURL},</if>
            <if test="mainImageURL != null and mainImageURL != ''">`main_image_url` = #{mainImageURL},</if>
            <if test="subImageURLs != null and subImageURLs != ''">`sub_image_urls` = #{subImageURLs},</if>
            <if test="status != null and status != ''">`status` = #{status},</if>
            <if test="sortScore != null">`sort_score` = #{sortScore},</if>
            <if test="updatedAt != null">`updated_at` = #{updatedAt}</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="queryItemsByOptions" parameterType="com.example.onlinestore.dto.ItemListQueryRequest" resultMap="itemResultMap">
        SELECT
        <include refid="Base_Column"/>
        FROM `item`
        WHERE
        1=1
        <if test="options != null and options.name != null">
            AND `name` = #{name}
        </if>
        <if test="options != null and options.categoryId != null">
            AND `category_id` = #{categoryId}
        </if>
        <if test="options != null and options.brandId != null">
            AND `brand_id` = #{brandId}
        </if>
        <if test="options != null and options.nameLike != null">
            AND `name` LIKE '%${nameLike}%'
        </if>
    </select>
</mapper>